<?php

namespace DummyRootNamespaceModules\DummySingular\Controllers;

use DummyRootNamespaceHttp\Controllers\Controller;
use DummyRootNamespaceModules\DummySingular\Entity\DummyEntitySingular;
use DummyRootNamespaceModules\DummySingular\Requests\DummyEntitySingularRequest;
use DummyRootNamespaceModules\DummySingular\Resources\DummyEntitySingularResource;
use DummyRootNamespaceModules\DummySingular\Service\DummyEntitySingularService;
use Exception;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;
use Inertia\Inertia;

class DummyEntitySingularController extends Controller
{

    private DummyEntitySingularService $service;

    public function __construct(DummyEntitySingularService $service)
    {
        $this->service = $service;
    }


    public function index(Request $request)
    {
        /*
        [$column, $order] = explode(',', $request->input('sortBy', 'id,asc'));
        $pageSize = (int) $request->input('pageSize', 10);

        $resource = DummyEntitySingular::query()
            ->when($request->filled('search'), function (Builder $q) use ($request) {
                $q->where(DummyEntitySingular::COLUMN_NAME, 'like', '%'.$request->search.'%');
            })
            ->orderBy($column, $order)->paginate($pageSize);
        */

        return Inertia::render('DummySingular/DummyEntitySingular/Index', [

            ]
        );
    }

    public function create(Request $request)
    {

        return Inertia::render('DummySingular/DummyEntitySingular/Create', []);
    }



    public function store(DummyEntitySingularRequest $request)
    {
        $data = $request->validated();
        $dummyVariableEntitySingular = $this->service->create($request->all()->except('_token'));
        return redirect()->route('admin.dummyVariableSingular.dummyVariableEntitySingular.show', $dummyVariableEntitySingular);
    }

    public function show(DummyEntitySingular $dummyVariableEntitySingular)
    {

        return Inertia::render('DummySingular/DummyEntitySingular/Show', [
                'dummyVariableEntitySingular' => $dummyVariableEntitySingular
            ]
        );
    }

    public function edit(DummyEntitySingular $dummyVariableEntitySingular)
    {

        return Inertia::render('DummySingular/DummyEntitySingular/Edit', [
            'dummyVariableEntitySingular' => $dummyVariableEntitySingular
        ]);
    }

    public function update(DummyEntitySingularRequest $request, DummyEntitySingular $dummyVariableEntitySingular)
    {
        $data = $request->validated();
        $dummyVariableEntitySingular = $this->service->update($dummyVariableEntitySingular, $request->all()->except('_token'));
        return redirect()->route('admin.dummyVariableSingular.dummyVariableEntitySingular.show', $dummyVariableEntitySingular);
    }

    public function destroy(DummyEntitySingular $dummyVariableEntitySingular)
    {
        $this->service->delete($dummyVariableEntitySingular);

        return redirect()->back();
    }
}
