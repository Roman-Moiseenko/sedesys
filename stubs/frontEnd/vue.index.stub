<template>
    <Head><title>{{ title }}</title></Head>
    <el-config-provider :locale="ru">
        <h1 class="font-medium text-xl">DummyEntitySingular</h1>
        <el-button type="primary" class="p-4 my-3" @click="createButton">Добавить DummyEntitySingular</el-button>

        <div class="mt-2 p-5 bg-white rounded-md">
            <el-table
                :data="tableData"
                :height="tableHeight"
                style="width: 100%; cursor: pointer;"
                :row-class-name="tableRowClassName"
                @row-click="routeClick"
                v-loading="store.getLoading"
            >
                <el-table-column sortable prop="name" label="Name" width="100" />
                <!-- Повторить -->
                <el-table-column label="Действия">
                    <template #default="scope">
                        <el-button
                            size="small"
                            @click.stop="handleEdit(scope.$index, scope.row)">
                            Edit
                        </el-button>
                        <el-button
                            size="small"
                            type="danger"
                            @click.stop="handleDelete(scope.$index, scope.row)"
                        >
                            Delete
                        </el-button>
                    </template>
                </el-table-column>
            </el-table>
        </div>

        <pagination
            :current_page="$page.props.dummyVariableEntityPlural.current_page"
            :per_page="$page.props.dummyVariableEntityPlural.per_page"
            :total="$page.props.dummyVariableEntityPlural.total"
        />
    </el-config-provider>

</template>

<script lang="ts" setup>
    import { useStore } from "/resources/js/store.js"
    const store = useStore();

    interface IRow {
        /**
         * Статусы
        */
        active: number
    }
    const tableRowClassName = ({row, rowIndex}: {row: IRow }) => {
        if (row.active === 0) {
            return 'warning-row'
        }
        return ''
    }
</script>

<script lang="ts">
    import { Head, Link } from '@inertiajs/vue3'
    import Layout from '@/Components/Layout.vue'
    import { router } from '@inertiajs/vue3'
    import Pagination from '@/Components/Pagination.vue'
    import ru from 'element-plus/dist/locale/ru.mjs'

export default {
    components: {
        Head,
        Pagination
    },
    layout: Layout,
    props: {
        dummyVariableEntityPlural: Object,
        title: {
            type: String,
            default: 'Список dummyVariableEntityPlural',
        }
    },
    data() {
        return {
            tableData: [...this.dummyVariableEntityPlural.data],
            TableHeight: '500',
            Loading: false,
        }
    },
    methods: {
        createButton() {
            router.get('/admin/dummyVariableSingular/dummyVariableEntitySingular/create')
        },
        routeClick(row) {
            router.get(row.url)
        },
        handleEdit(index, row) {
            router.get(row.edit);
        },
        handleDelete(index, row) {
            router.delete(row.destroy);
        },
    }
}
</script>

<style >
    .el-table tr.warning-row {
        --el-table-tr-bg-color: var(--el-color-warning-light-7);
    }
    .el-table .success-row {
        --el-table-tr-bg-color: var(--el-color-success-light-9);
    }
</style>
