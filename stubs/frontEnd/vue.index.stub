<template>
    <Head><title>{{ title }}</title></Head>
    <el-config-provider :locale="ru">
        <h1 class="font-medium text-xl">DummyEntitySingular</h1>
        <!-- Фильтр -->
        <div class="flex">
            <el-button type="primary" class="p-4 my-3" @click="createButton">Добавить DummyEntitySingular</el-button>
            <TableFilter :filter="filter" class="ml-auto" :count="$props.filters.count">
                <el-input v-model="filter.name" placeholder="Name"/>
            </TableFilter>
        </div>
        <div class="mt-2 p-5 bg-white rounded-md">
            <el-table
                :data="tableData"
                :max-height="600"
                style="width: 100%; cursor: pointer;"
                :row-class-name="tableRowClassName"
                @row-click="routeClick"
                v-loading="store.getLoading"
            >
                <!-- Повторить поля -->
                <el-table-column sortable prop="name" label="Name" width="100" />

                <el-table-column label="Действия" align="right">
                    <template #default="scope">
                        <el-button
                            size="small"
                            @click.stop="router.get(scope.row.edit)">
                            Edit
                        </el-button>
                        <el-button
                            size="small"
                            type="danger"
                            @click.stop="handleDeleteEntity(scope.row)"
                        >
                            Delete
                        </el-button>
                    </template>
                </el-table-column>
            </el-table>
        </div>

        <pagination
            :current_page="$page.props.dummyVariableEntityPlural.current_page"
            :per_page="$page.props.dummyVariableEntityPlural.per_page"
            :total="$page.props.dummyVariableEntityPlural.total"
        />
    </el-config-provider>

    <DeleteEntityModal name="dummyVariableEntityPlural" name_entity="dummyVariableEntityPlural" />
    <!-- Dialog Delete -->
    <el-dialog v-model="$data.dialogDelete" title="Удалить запись" width="400" center>
        <div class="font-medium text-md mt-2">
            Вы уверены, что хотите удалить dummyVariableEntitySingular?
        </div>
        <div class="text-red-600 text-md mt-2">
            Восстановить данные будет невозможно!
        </div>
        <template #footer>
            <div class="dialog-footer">
                <el-button @click="$data.dialogDelete = false">Отмена</el-button>
                <el-button type="danger" @click="removeItem($data.routeDestroy)">
                    Удалить
                </el-button>
            </div>
        </template>
    </el-dialog>
</template>

<script lang="ts" setup>
    import { inject, ref, defineProps, reactive } from 'vue'
    import { useStore } from "/resources/js/store.js"
    import { Head, router } from '@inertiajs/vue3'
    import Pagination from '@/Components/Pagination.vue'
    import ru from 'element-plus/dist/locale/ru.mjs'
    import TableFilter from '@/Components/TableFilter.vue'
    import {func} from "/resources/js/func.js"

    const props = defineProps({
        dummyVariableEntityPlural: Object,
        title: {
            type: String,
            default: 'Список dummyVariableEntityPlural',
        },
        filters: Array,
    })

    const store = useStore();
    const Loading = ref(false);
    const $delete_entity = inject("$delete_entity")
    const tableData = ref([...props.dummyVariableEntityPlural.data])
    const filter = reactive({
        name: props.filters.name,

    })

    interface IRow {
        /**
         * Статусы
        */
        active: number
    }
    const tableRowClassName = ({row, rowIndex}: {row: IRow }) => {
        if (row.active === false) {
            return 'warning-row'
        }
        return ''
    }
    function handleDeleteEntity(row) {
        $delete_entity.show('dummyVariableEntityPlural', row.destroy).then(() => {

        });
    }
    function createButton() {
        router.get('/admin/dummyVariableSingular/dummyVariableEntitySingular/create')
    }
    function routeClick(row) {
        router.get(row.url)
    }
</script>


<style >
    .el-table tr.warning-row {
        --el-table-tr-bg-color: var(--el-color-warning-light-7);
    }
    .el-table .success-row {
        --el-table-tr-bg-color: var(--el-color-success-light-9);
    }
</style>
